#!/usr/bin/env bash
# Bulletproof AI CLI for Termux + Proot
set -euo pipefail
IFS=$'\n\t'

AI_HOME="$HOME/.local_ai"
MODULES_DIR="$AI_HOME/modules"
AI_SCRIPT="$AI_HOME/ai"
SWAP="$AI_HOME/swap"
SANDBOX="$AI_HOME/sandbox"
DB="$AI_HOME/core.db"
MODEL="2244:latest"

mkdir -p "$AI_HOME" "$MODULES_DIR" "$SWAP" "$SANDBOX"

log() { echo "[$(date '+%H:%M:%S')] $*"; }

# Load environment variables
[ -f "$HOME/.env.local" ] && source "$HOME/.env.local"

# Mandatory dependencies
for dep in python3-full git curl wget sqlite3 nodejs build-essential; do
    if ! command -v "$dep" &>/dev/null; then
        log "Installing missing $dep..."
        sudo apt update && sudo apt install -y "$dep"
    fi
done

# Pull modules safely (skip missing)
MODULES=(blockchain nostr lightning termux proot url-parser snippet-assembler)
for m in "${MODULES[@]}"; do
    URL="https://raw.githubusercontent.com/Noorsanto/_NIX-SYSOP-AI-AGENT-by-Aris-Arjuna-Noorsanto/main/modules/$m.sh"
    OUT="$MODULES_DIR/$m.sh"
    if ! curl -fsSL "$URL" -o "$OUT"; then
        log "âš  Module $m not found, creating placeholder"
        echo "# placeholder for $m" > "$OUT"
    fi
    chmod +x "$OUT"
done

# Initialize SQLite DB if missing
if [ ! -f "$DB" ]; then
    log "Initializing AI core database..."
    sqlite3 "$DB" <<SQL
CREATE TABLE IF NOT EXISTS mindflow(
    id INTEGER PRIMARY KEY,
    session_id TEXT,
    loop_id INTEGER,
    model_name TEXT,
    output TEXT,
    rank INTEGER,
    timestamp DATETIME DEFAULT CURRENT_TIMESTAMP
);
CREATE TABLE IF NOT EXISTS task_logs(
    id INTEGER PRIMARY KEY,
    tool_used TEXT,
    args TEXT,
    output_summary TEXT,
    timestamp DATETIME DEFAULT CURRENT_TIMESTAMP
);
CREATE TABLE IF NOT EXISTS cache(
    prompt_hash TEXT PRIMARY KEY,
    final_answer TEXT
);
SQL
fi

# Function: Run Ollama
run_ollama() {
    local prompt="$1"
    # Translate Chinese to English automatically
    if echo "$prompt" | grep -qP '[\x{4e00}-\x{9fff}]'; then
        log "Detected Chinese input, translating to English..."
        prompt="[Translate to English] $prompt"
    fi
    ollama run "$MODEL" --prompt "$prompt"
}

# Main
if [ $# -eq 0 ]; then
    log "Usage: ai 'your prompt here'"
    exit 1
fi

QUERY="$*"
log "Querying AI (English/German only)..."
OUTPUT=$(run_ollama "$QUERY")

# Save to cache
HASH=$(echo -n "$QUERY" | sha256sum | awk '{print $1}')
sqlite3 "$DB" "INSERT OR REPLACE INTO cache(prompt_hash, final_answer) VALUES ('$HASH', '$(echo "$OUTPUT" | sed "s/'/''/g")');"

echo -e "$OUTPUT"