#!/usr/bin/env bash
# Self-Updating AI CLI (English/German only)
set -euo pipefail
IFS=$'\n\t'

# --- Directories & Variables ---
AI_HOME="${HOME}/.local_ai"
MODULES_DIR="$AI_HOME/modules"
DB="$AI_HOME/core.db"
SANDBOX="$AI_HOME/sandbox"
LOGS="$HOME/logs"
REPO="https://github.com/YourUser/_NIX-SYSOP-AI-AGENT-by-Aris-Arjuna-Noorsanto"

mkdir -p "$AI_HOME" "$MODULES_DIR" "$SANDBOX" "$LOGS"

log() { echo "[$(date '+%H:%M:%S')] $*"; }

# --- Self-Heal: update AI CLI ---
SELF="$AI_HOME/ai"
log "ðŸ”„ Checking for updates..."
curl -sL "$REPO/main/ai.sh" -o "$SELF.tmp" && chmod +x "$SELF.tmp" && mv "$SELF.tmp" "$SELF"
alias ai="$SELF"

# --- Pull Modules ---
for mod in blockchain nostr lightning termux url-parser snippet-assembler; do
    curl -sL "$REPO/modules/$mod.sh" -o "$MODULES_DIR/$mod.sh"
    chmod +x "$MODULES_DIR/$mod.sh"
done

# --- Dependencies ---
for cmd in python3 sqlite3 curl wget git unzip node npm ollama; do
    if ! command -v "$cmd" &>/dev/null; then
        log "Installing $cmd..."
        case "$cmd" in
            python3|sqlite3|curl|wget|git|unzip|node|npm)
                apt install -y "$cmd"
                ;;
            ollama)
                curl -L -o /tmp/ollama.tar.gz https://ollama-releases.s3.amazonaws.com/ollama-cli-latest-linux.tar.gz
                tar -xzf /tmp/ollama.tar.gz -C /tmp
                chmod +x /tmp/ollama
                mv /tmp/ollama /usr/local/bin/
                ;;
        esac
    fi
done

# --- Initialize DB ---
if [ ! -f "$DB" ]; then
    log "Initializing AI database..."
    sqlite3 "$DB" "CREATE TABLE mindflow(id INTEGER PRIMARY KEY, session_id TEXT, model_name TEXT, output TEXT, timestamp DATETIME DEFAULT CURRENT_TIMESTAMP);"
    sqlite3 "$DB" "CREATE TABLE cache(prompt_hash TEXT PRIMARY KEY, final_answer TEXT);"
fi

# --- Prompt ---
PROMPT="${*:-}"
if [ -z "$PROMPT" ]; then
    read -rp "Enter your prompt: " PROMPT
fi

# --- Cache Check ---
HASH=$(echo -n "$PROMPT" | sha256sum | awk '{print $1}')
CACHED=$(sqlite3 "$DB" "SELECT final_answer FROM cache WHERE prompt_hash='$HASH';")
if [ -n "$CACHED" ]; then
    echo "$CACHED"
    exit 0
fi

# --- Generate via Ollama ---
MODEL="default-model"
RAW_OUTPUT=$(ollama generate "$MODEL" "$PROMPT" 2>/dev/null)

# --- Language Filter ---
FILTERED_OUTPUT=$(echo "$RAW_OUTPUT" | sed 's/[^A-Za-z0-9Ã¤Ã¶Ã¼ÃŸÃ„Ã–Ãœ,.!?;:()"\x27 \t\n-]//g')

# --- Store Results ---
SESSION=$(uuidgen)
sqlite3 "$DB" "INSERT INTO mindflow(session_id, model_name, output) VALUES('$SESSION','$MODEL','$(echo "$FILTERED_OUTPUT" | sed "s/'/''/g")');"
sqlite3 "$DB" "INSERT OR REPLACE INTO cache(prompt_hash, final_answer) VALUES('$HASH','$(echo "$FILTERED_OUTPUT" | sed "s/'/''/g")');"

# --- Output ---
echo "$FILTERED_OUTPUT"
log "âœ… AI CLI finished. English/German only enforced."