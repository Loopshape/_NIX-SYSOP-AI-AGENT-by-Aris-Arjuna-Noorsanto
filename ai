#!/usr/bin/env bash
# One-Shot AI CLI Installer / Updater for Termux + Proot + Ollama

set -euo pipefail
IFS=$'\n\t'

#!/usr/bin/env bash
# AI CLI wrapper â€” uses Ollama CLI directly
PROMPT="$*"
MODEL="2244:latest"   # change to your preferred model

# Run the model and capture output
ollama run "$MODEL" --prompt "$PROMPT"

AI_HOME="$HOME/.local_ai"
BIN_DIR="$HOME/.bin"
AI_CLI="$BIN_DIR/ai"

mkdir -p "$AI_HOME" "$BIN_DIR" "$AI_HOME/modules"

log() { echo "[$(date '+%H:%M:%S')] $*"; }

log "âœ… Installing core dependencies..."
# Install only minimal required packages
apt update && apt install -y python3-full curl wget git unzip nodejs build-essential || true
command -v brew >/dev/null || true  # optional Homebrew
command -v npm >/dev/null || true   # optional npm
command -v pip >/dev/null || true   # optional pip

# --- Install Ollama CLI if missing ---
if ! command -v ollama >/dev/null; then
    log "Downloading Ollama CLI..."
    curl -L -o /tmp/ollama.tar.gz https://ollama-releases.s3.amazonaws.com/ollama-cli-latest-linux.tar.gz
    tar -xzf /tmp/ollama.tar.gz -C /tmp
    chmod +x /tmp/ollama
    mv /tmp/ollama /usr/local/bin/
    log "Ollama installed."
fi

# --- Install patched AI CLI ---
log "Installing patched AI CLI..."
cat > "$AI_CLI" <<'EOF'
#!/usr/bin/env bash
set -euo pipefail; IFS=$'\n\t'
AI_HOME="$HOME/.local_ai"; SERVER_PORT="${SERVER_PORT:-11434}"

# Load environment
[ -f "$HOME/.env.local" ] && { set -a; source "$HOME/.env.local"; set +a; } || \
[ -f "$HOME/.env" ] && { set -a; source "$HOME/.env"; set +a; }

# Start Ollama if not running
if ! pgrep -x ollama >/dev/null 2>&1; then
    mkdir -p "$HOME/logs"
    nohup ollama serve > "$HOME/logs/ollama_server.log" 2>&1 &
fi

# Wait for Ollama server
until curl -s "http://localhost:$SERVER_PORT/ask" >/dev/null 2>&1; do sleep 1; done

# Prompt input
[ "$#" -lt 1 ] && { echo "Usage: ai 'your prompt'"; exit 1; }
PROMPT="$*"

# Query Ollama
RESPONSE=$(curl -s "http://localhost:$SERVER_PORT/ask" \
    -H "Content-Type: application/json" \
    -d "{\"prompt\":\"$PROMPT\"}")

# Extract answer and auto-translate Chinese -> English
ANSWER=$(echo "$RESPONSE" | python3 -c "
import sys, json
r=json.load(sys.stdin)
text=r.get('answer','')
if any('\u4e00' <= c <= '\u9fff' for c in text):
    import subprocess
    result=subprocess.run(['trans','-b',':en',text], capture_output=True, text=True)
    text=result.stdout.strip()
print(text)
")
echo -e "$ANSWER"
EOF

chmod +x "$AI_CLI"
ln -sf "$AI_CLI" "$BIN_DIR/ai"
log "âœ… Patched AI CLI installed at $AI_CLI and symlinked to $BIN_DIR/ai"

# --- Self-heal script ---
log "Creating self-heal updater..."
cat > "$AI_HOME/self_heal.sh" <<EOF
#!/usr/bin/env bash
curl -s -o $AI_CLI https://raw.githubusercontent.com/user/ai/main/ai.sh
chmod +x $AI_CLI
EOF
chmod +x "$AI_HOME/self_heal.sh"
log "âœ… Self-heal script created at $AI_HOME/self_heal.sh"

log "ðŸŽ‰ Installation complete. Start AI CLI with: ai 'your prompt'"