#!/usr/bin/env bash
# ~/.bin/ai - SQL-first AI CLI (no hardcoding)
set -euo pipefail
IFS=$'\n\t'

AI_HOME="$HOME/.local_ai"
DB="$AI_HOME/core.db"
mkdir -p "$AI_HOME/logs"

# --- Start Ollama if not running ---
if ! pgrep -x ollama >/dev/null 2>&1; then
    echo "[INFO] Starting Ollama server..."
    nohup ollama serve > "$AI_HOME/logs/ollama_server.log" 2>&1 &
    sleep 3
fi

# --- Initialize DB ---
sqlite3 "$DB" <<'SQL'
CREATE TABLE IF NOT EXISTS cache(
    prompt TEXT PRIMARY KEY,
    response TEXT,
    timestamp DATETIME DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS mindflow(
    id INTEGER PRIMARY KEY,
    session_id TEXT,
    loop_id INTEGER,
    model_name TEXT,
    output TEXT,
    rank INTEGER,
    timestamp DATETIME DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS modules(
    name TEXT PRIMARY KEY,
    script BLOB,
    enabled INTEGER DEFAULT 1,
    timestamp DATETIME DEFAULT CURRENT_TIMESTAMP
);
SQL

# --- Read prompt ---
if [ $# -lt 1 ]; then
    echo "Usage: ai 'your prompt here'"
    exit 1
fi
PROMPT="$*"

# --- Check cache ---
RESPONSE=$(sqlite3 "$DB" "SELECT response FROM cache WHERE prompt=$(printf '%q' "$PROMPT");")
if [ -n "$RESPONSE" ]; then
    echo "$RESPONSE"
    exit 0
fi

# --- Execute enabled modules directly from DB ---
while IFS= read -r MOD; do
    SCRIPT=$(sqlite3 "$DB" "SELECT script FROM modules WHERE name=$(printf '%q' "$MOD");")
    if [ -n "$SCRIPT" ]; then
        bash -c "$SCRIPT" || echo "[WARN] Module $MOD failed"
    fi
done < <(sqlite3 "$DB" "SELECT name FROM modules WHERE enabled=1;")

# --- Query AI ---
RESPONSE=$(ollama run 2244:latest "$PROMPT" 2>/dev/null || true)
if [ -z "$RESPONSE" ]; then
    echo "[ERROR] Ollama server not responding."
    exit 1
fi

# --- Save to cache ---
sqlite3 "$DB" <<SQL
INSERT OR IGNORE INTO cache(prompt,response)
VALUES ($(printf '%q' "$PROMPT"), $(printf '%q' "$RESPONSE"));
SQL

# --- Log to mindflow ---
sqlite3 "$DB" <<SQL
INSERT INTO mindflow(session_id, loop_id, model_name, output, rank)
VALUES ('default', 0, '2244:latest', $(printf '%q' "$RESPONSE"), 0);
SQL

# --- Output ---
echo "$RESPONSE"
